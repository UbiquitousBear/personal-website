stages:
  - quality
  - build
  - release

variables:
  IMAGE_NAME: ${CI_REGISTRY_IMAGE}
  IMAGE_TAG: ${CI_COMMIT_SHA}
  KUBERNETES_NAMESPACE: shamil

.cache: &cache
  key: shamilweb_node_modules
  paths:
    - node_modules/

.npm: &npm
  image:
    name: node:10.16.3-alpine
  before_script:
    - apk add --no-cache make git openssh-client
    - mkdir -p ~/.ssh
    - ssh-keyscan -H -t rsa github.com >> ~/.ssh/known_hosts
    - cp ${GITLAB_SHARED_SSH_KEY} ~/.ssh/id_rsa && chmod 400 ~/.ssh/id_rsa
    - npm install

##
## LINT
##

lint:
  <<: *npm
  stage: quality
  cache:
    <<: *cache
  script:
    - npm run lint

##
## TEST
##

test:
  <<: *npm
  stage: quality
  cache:
    <<: *cache
  script:
    - npm run test

##
## BUILD
##

build-app:
  <<: *npm
  stage: build
  artifacts:
    name: ${CI_JOB_STAGE}
    paths:
      - build/
  cache:
    <<: *cache
    policy: pull
  script:
    - npm run build
    - cp -r content build/

##
## RELEASE
##

build-image:
  stage: release
  only: [ master ]
  image:
    name: gcr.io/kaniko-project/executor:debug
  dependencies:
    - build-app
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - cp release/* build/
    - /kaniko/executor
      --cache=true
      --context ${CI_PROJECT_DIR}
      --dockerfile ${CI_PROJECT_DIR}/release/Dockerfile
      --destination ${IMAGE_NAME}:${IMAGE_TAG}
      --destination ${IMAGE_NAME}:latest

